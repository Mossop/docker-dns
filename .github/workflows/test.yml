name: Tests

on:
  push:
    branches:
      - main
  pull_request: {}

jobs:
  test:
    name: "Tests"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup build cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Setup buildx
        uses: docker/setup-buildx-action@v1

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools

      - name: Install helpers
        run: sudo apt install kcov

      - name: Cargo check
        run: cargo check --all-features

      - name: Build test containers
        run: containers/build_containers.sh

      - name: Run tests
        env:
          CARGO_INCREMENTAL: 0
          RUSTFLAGS: "-C link-dead-code"
        run: |
          cargo clean
          cargo test --all-features --no-run
          for file in target/debug/deps/localns-*; do [ -x "${file}" ] || continue; mkdir -p "target/cov/$(basename $file)"; kcov --exclude-pattern=~/.cargo --verify "target/cov/$(basename $file)" "$file"; done

      - uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true

  lint:
    name: "Lints"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup build cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Rust
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt, clippy

      - name: Clippy
        run: cargo clippy --all-features -- --deny "warnings"

      - name: Rustfmt
        run: cargo fmt --check

      - name: Check for unused dependencies
        uses: bnjbvr/cargo-machete@main
