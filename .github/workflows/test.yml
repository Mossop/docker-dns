name: Tests

on:
  push:
    branches:
      - main
  pull_request: {}

jobs:
  test:
    name: "Tests"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup build cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools

      - name: Install helpers
        run: cargo install cargo-binutils && sudo apt install jq

      - name: Cargo check
        run: cargo check --all-features

      - name: Run tests
        run: cargo test --all-features
        env:
          RUSTFLAGS: "-C instrument-coverage"

      - name: Merge profiling reports
        run: rust-profdata merge -sparse default_*.profraw -o localns.profdata

      - name: Export profiling data
        run: ./cov_wrapper.sh export --instr-profile=localns.profdata --format=lcov --sources src >coverage.txt

      - uses: codecov/codecov-action@v4
        with:
          files: ./coverage1.txt
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true

  lint:
    name: "Lints"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup build cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Rust
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt, clippy

      - name: Clippy
        run: cargo clippy --all-features -- --deny "warnings"

      - name: Rustfmt
        run: cargo fmt --check
